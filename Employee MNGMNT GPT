import java.util.Scanner;

class Employee {

    private int employeeID;
    private String name;
    private double salary;
    private String position;

    public Employee(int employeeID, String name, double salary, String position) {
        this.employeeID = employeeID;
        this.name = name;
        this.salary = salary;
        this.position = position;
    }   //meaning ng this ay variable, pwede palitan.

    public int getEmployeeID() {         // Getter and Setter methods for employeeID
        return employeeID;
    }

    public void setEmployeeID(int employeeID) {
        this.employeeID = employeeID;
    }

    public String getName() {            // Getter and Setter methods for name
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }

    public String getPosition() {
        return position;
    }

    public void setPosition(String position) {
        this.position = position;
    }

    public void displayEmployeeDetails() {
        System.out.println("Employee ID: " + employeeID);
        System.out.println("Name: " + name);
        System.out.println("Salary: " + salary);
        System.out.println("Position: " + position);
    }
}


public class EmployeeManagementSystem {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Create a new employee object
        Employee employee = null;

        while (true) {
            // Menu for user actions
            System.out.println("\nEmployee Management System");
            System.out.println("1. Add new employee");
            System.out.println("2. Update salary");
            System.out.println("3. Update position");
            System.out.println("4. Retrieve employee details");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine();  // Consume newline

            switch (choice) {
                case 1: // Add a new employee
                    System.out.print("Enter Employee ID: ");
                    int id = scanner.nextInt();
                    scanner.nextLine();  // Consume newline
                    System.out.print("Enter Employee Name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter Salary: ");
                    double salary = scanner.nextDouble();
                    scanner.nextLine();  // Consume newline
                    System.out.print("Enter Position: ");
                    String position = scanner.nextLine();

                    // Create the new employee
                    employee = new Employee(id, name, salary, position);
                    System.out.println("Employee added successfully.");
                    break;

                case 2: // Update salary
                    if (employee != null) {
                        System.out.print("Enter new salary: ");
                        double newSalary = scanner.nextDouble();
                        employee.setSalary(newSalary);
                        System.out.println("Salary updated successfully.");
                    } else {
                        System.out.println("No employee data available. Please add an employee first.");
                    }
                    break;

                case 3: // Update position
                    if (employee != null) {
                        System.out.print("Enter new position: ");
                        String newPosition = scanner.nextLine();
                        employee.setPosition(newPosition);
                        System.out.println("Position updated successfully.");
                    } else {
                        System.out.println("No employee data available. Please add an employee first.");
                    }
                    break;

                case 4: // Retrieve employee details
                    if (employee != null) {
                        employee.displayEmployeeDetails();
                    } else {
                        System.out.println("No employee data available. Please add an employee first.");
                    }
                    break;

                case 5: // Exit
                    System.out.println("Exiting the system...");
                    scanner.close();
                    return;

                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}




